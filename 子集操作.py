import time
import numpy as np


def main():
    np.random.seed(int(time.time()))
    a = np.random.randint(1, 100, (7, 5))
    print(a)
    # Output:
    # [[62 44 85 28 79]
    #  [94 34 42  3 26]
    #  [ 7 64 51 70 35]
    #  [62 33 51 92 15]
    #  [ 1 66 60 62 25]
    #  [ 1 56 59 19 23]
    #  [54 93  1 58 19]]

    # 指定第3行第4个元素的值
    print(a[2, 3])
    # Output:
    # 70

    # 指定第2行的所有值
    print(a[1])
    # Output:
    # [94 34 42  3 26]

    # 指定第2行的所有列的值，等同于a[1]
    print(a[1, :])
    # Output:
    # [94 34 42  3 26]

    # 指定第1行到第3行的值, 索引0到2
    print(a[0:3])
    # Output:
    # [[62 44 85 28 79]
    #  [94 34 42  3 26]
    #  [ 7 64 51 70 35]]

    # 指定第 2 行的第 1 列到第 2 列的值, 索引为1的行中取索引 0 到 2（不包括 2）的列值
    print(a[1, 0:2])
    # Output:
    # [94 34]

    # 返回的是一个新的数组，包含了原数组中的第一个元素，与a[1]的区别是：
    # a[1] 是索引操作，指定数组中的2个元素
    # a[:1] 是切片操作，返回新数组，包含原数组中第2个元素
    print(a[:1])
    # Output:
    # [[62 44 85 28 79]]

    # 从数组 a 中提取从索引 0 到 10（不包括 10）之间的元素，并且每次跳过 3 个元素
    # 三个数字对应的是 start:end:step
    print(a[0:7:3])
    # Output:
    # [[62 44 85 28 79]
    #  [62 33 51 92 15]
    #  [54 93  1 58 19]]

    # 反向切片，即从右到左，即提取索引从 10 到 0（不包括 0）之间的元素，并且每次跳过 3 个元素
    print(a[7:0:-3])
    # Output:
    # [[54 93  1 58 19]
    #  [62 33 51 92 15]]

    # 反向切片，即从右到左，即提取索引从 10 到 0（包括 0）之间的元素，并且每次跳过 3 个元素
    print(a[7::-3])
    # Output:
    # [[54 93  1 58 19]
    #  [62 33 51 92 15]
    #  [62 44 85 28 79]]

    # 返回一个新数组，该数组是原数组的倒序版本
    print(a[::-1])
    # Output:
    # [[54 93  1 58 19]
    #  [ 1 56 59 19 23]
    #  [ 1 66 60 62 25]
    #  [62 33 51 92 15]
    #  [ 7 64 51 70 35]
    #  [94 34 42  3 26]
    #  [62 44 85 28 79]]

    # 返回一个新数组，包含从索引 1 开始的所有数组元素
    print(a[1::])
    # Output:
    # [[94 34 42  3 26]
    #  [ 7 64 51 70 35]
    #  [62 33 51 92 15]
    #  [ 1 66 60 62 25]
    #  [ 1 56 59 19 23]
    #  [54 93  1 58 19]]

    # 提取数组的索引为1对应的数据，同时保留其他维度的所有元素
    print(a[1, ...])
    # Output:
    # [94 34 42  3 26]

    # 查找 a 数组中所有小于20的元素
    print(a[a < 20])
    # Output:
    # [ 3  7 15  1  1 19  1 19]

    # 查找 a 数组中所有大于50并且为偶数的元素
    print(a[(a > 50) & (a % 2 == 0)])
    # Output:
    # [62 94 64 70 62 92 66 60 62 56 54 58]

    # 高级索引操作，允许通过 数组 或 列表 来索引二维数组的特定元素
    # [1, 0, 1, 0] 为行索引
    # [0, 1, 2, 0] 为列索引
    # 结合起来就是提取[1, 0]、[0, 1]、[1, 2] 和 [0, 0] 这四个元素
    print(a[[1, 0, 1, 0], [0, 1, 2, 0]])
    # Output:
    # [94 44 42 62]

    # 高级索引操作，提取数组 a 的特定行
    print(a[[1, 0, 1, 0]])
    # Output:
    # [[94 34 42  3 26]
    #  [62 44 85 28 79]
    #  [94 34 42  3 26]
    #  [62 44 85 28 79]]

    # 切片和高级索引结合，提取数组 a 的特定行中的所有行中对应的列值
    print(a[[1, 0, 1, 0]][:, [0, 1, 2, 0]])
    # Output:
    # [[94 34 42 94]
    #  [62 44 85 62]
    #  [94 34 42 94]
    #  [62 44 85 62]]


if __name__ == '__main__':
    main()
